1. 搭建vs2015,atom环境。
2. 新建github账号，并使用git管理自己的学生管理项目。
3. 创建三个const int值，把它们加到一起得到一个值用来在一个数组中定义决定该数组的大小。在C中编译一遍相同的代码，看看会出现什么情况。
4.自行证实C编译器和C++编译器对于const处理时不同的。创建一个全局的const并将它用在一个全局的常量表达式中；然后分别用C和C++编译它。
5.在一个头文件中创建一个const定义，包含这个头文件在两个.cpp文件中，然后编译这些文件并连接它们，再在c环境中尝试一遍。
6.创建一个const，当程序运行时，通过读时间决定它的值（使用<ctime>）,然后再这个程序中读时间的第二个值，并赋给const，看看会有什么结果。
7.在一个文件中创建一个extern const声明，该文件的main()函数答应extern const的值，在另外一个文件中定义extern const,然后编译和连接这两个文件。
8.使用不同的声明形式创建两个指向const long的指针，一个指针指向一个long数组。演示能让指针增加和减少，但不能改变它所指向的值。
9.写一个指向double类型的const指针，让它指向double数组。显示能改变指针指向的内容，但不能增加或减小指针。
10.创建一个const字符数组和一个指向该数组开始点的指针，使用这个指针修改数组中的元素，看看编译器是否会报错，应当出错吗？如果没有，为什么会认为出错？
11. 创建一个函数，它带有一个const值传递的参数，然后在函数体中试图改变该参数。
12.写代码验证bool和BOOL的区别。